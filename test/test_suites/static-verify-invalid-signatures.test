#
# Copyright 2013-2016 Guardtime, Inc.
#
# This file is part of the Guardtime client SDK.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES, CONDITIONS, OR OTHER LICENSES OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.
# "Guardtime" and "KSI" are trademarks or registered trademarks of
# Guardtime, Inc., and no license to trademarks is granted; Guardtime
# reserves and retains all trademark rights.

# ============ Invalid verification verification. ============

# Try to parse (verify) signature with invalid calendar authentication record TLV1.
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-2014-12-03.invalid-tlv.cert-id.ksig -d 
>>>2 /(Error: Unable to parse KSI Signature)(.*0x101.*)/
>>>= 4

# Try to parse (verify) signature with invalid calendar authentication record TLV2.
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-2014-12-04.invalid-tlv.invalid-sig.ksig -d 
>>>2 /(Error: Unable to parse KSI Signature)(.*0x101.*)/
>>>= 4

# Try to parse (verify) signature with invalid calendar authentication record TLV3.
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-2014-12-04.invalid-tlv.sig-len.ksig -d 
>>>2 /(Error: Unable to parse KSI Signature)(.*0x101.*)/
>>>= 4

# Try to parse (verify) file that has no content.
EXECUTABLE verify --ver-int -i test/resource/file/null -d 
>>>2 /(Error: Input file is empty)(.*0x10006.*)/
>>>= 4

# Try to parse (verify) a blob thats size is equal to maximum TLV size.
EXECUTABLE verify --ver-int -i test/resource/file/file_max_tlv_size -d 
>>>2 /(Error: Unable to parse KSI Signature)(.*0x101.*)/
>>>= 4

# Try to parse (verify) a blob thats size is equal to 1 + maximum TLV size.
EXECUTABLE verify --ver-int -i test/resource/file/file_max_tlv_size_p1 -d 
>>>2 /(Error: Input file too long for a valid KSI Signature file)(.*0x10006.*)/
>>>= 4

# Try to parse (verify) a signature with two trust anchors.
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-two-anchors.ksig -d
>>>2 /(Error: Unable to parse KSI Signature)(.*0x101.*)/
>>>= 4




# Try to verify a signature with inconsistent aggregation hash chain.
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-with-invalid-rfc3161-output-hash.ksig -d 
>>>2 /(.*Error.*)(.*INT-1*)(.*Inconsistent aggregation hash chains.*)(.*0x20a.*)/
>>>= 6

# Try to verify a signature with inconsistent aggregation hash chain aggregation times.
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-inconsistent-aggregation-chain-time.ksig -d
>>>2 /(.*Error.*)(.*INT-2*)(.*Inconsistent aggregation hash chain aggregation times.*)(.*0x20a.*)/
>>>= 6

# Try to verify a signature with invalid calendar hash chain.
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-with-invalid-calendar-hash-chain.ksig -d
>>>2 /(.*Error.*)(.*INT-3*)(.*Calendar hash chain input hash mismatch.*)(.*0x20a.*)/
>>>= 6

# Try to verify a signature that contains calendar hash chain thats aggregation time does not match.
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-with-invalid-calendar-chain-aggregation-time.ksig -d
>>>2 /(.*Error.*)(.*INT-4*)(.*Calendar hash chain aggregation time mismatch.*)(.*0x20a.*)/
>>>= 6

# Try to verify a signature thats calendar hash chain publications time does not match the one in calendar authentication record. 
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-with-invalid-authentication-record-publication-time.ksig -d
>>>2 /(.*Error.*)(.*INT-6*)(.*Calendar hash chain time inconsistent with calendar authentication record time.*)(.*0x20a.*)/
>>>= 6

# Try to verify a signature thats calendar hash chain publications time does not match the one in publication record. 
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-with-invalid-publication-record-publication-data-time.ksig -d
>>>2 /(.*Error.*)(.*INT-7*)(.*Calendar hash chain time inconsistent with publication time.*)(.*0x20a.*)/
>>>= 6

# Try to verify a signature thats calendar hash chain hash value does not match the one in calendar authentication record. 
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-with-invalid-calendar-authentication-record-hash.ksig -d
>>>2 /(.*Error.*)(.*INT-8*)(.*Calendar hash chain root hash is inconsistent with calendar authentication record input hash.*)(.*0x20a.*)/
>>>= 6

# Try to verify a signature thats calendar hash chain hash value does not match the one in publication record. 
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-with-invalid-publication-record-publication-data-hash.ksig -d
>>>2 /(.*Error.*)(.*INT-9*)(.*Calendar hash chain root hash is inconsistent with published hash value.*)(.*0x20a.*)/
>>>= 6

# Try to verify a signature thats calendar hash chain hash value does not match the one in publication record. 
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-with-invalid-publication-record-publication-data-hash.ksig -d
>>>2 /(.*Error.*)(.*INT-9*)(.*Calendar hash chain root hash is inconsistent with published hash value.*)(.*0x20a.*)/
>>>= 6

# Try to verify a signature that contains meta data that may be interpreted as imprint. 
EXECUTABLE verify --ver-int -i test/resource/signature/nok-sig-untrusted-meta-data.ksig -d
>>>2 /(.*Error.*)(.*INT-11*)(.*The metadata record in the aggregation hash chain may not be trusted.*)(.*0x20a.*)/
>>>= 6
