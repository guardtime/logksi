(LOGKSI-63) * IMPROVEMENT: Improved error messages when integrating invalid or broken log signature files.

----------- remove this line when release is made -----------

* IMPROVEMENT: Verification error handling improved.
* IMPROVEMENT: Debug output with -d option is more compact.
* IMPROVEMENT: Option --show-progress works only with debug level 1 (just one -d).
* FEATURE: By specifying -d options only once will display summary of the log file.
* FEATURE: By specifying multiple -d options (-d -d or -dd) will display summary of each block.
* FEATURE: By specifying multiple -d options (-d -d -d or -ddd) debug output will be more verbose.
* FEATURE: Debug output (-d, -dd and -ddd) of verify shows inter-linking input and output hash for each block and log file.
* FEATURE: Debug output (-dd and -ddd) shows block signing time.
* FEATURE: Debug output (-dd and -ddd) of extend shows time where signature was extended.
* FEATURE: Debug output (-dd and -ddd) shows block line numbers.
* FEATURE: Signing time of a block is verified to have more recent signing time than previous block.
* FEATURE: New option --ignore-desc-block-time to skip signing time verification where more recent log blocks must have more recent signing time.
* FEATURE: New option -- for verify task that enables user to list multiple log files for verification.
* FEATURE: New option --input-hash to specify inter-linking hash as input for verification.
* FEATURE: New option --output-hash to output the last leaf hash for inter-linking.
* FEATURE: New option --warn-same-block-time that prints a warning when two consecutive blocks has same signing time.
* BUGFIX: Some suggestion messages pointing to KSI tool instead of logksi fixed.
* BUGFIX: Verifying: help function fixed, help text now available.
* BUGFIX: Verification error message fixed and improved in case where publication record is not available in publications file.
* BUGFIX: When extending log signature thats name is derived from log files name, the log file existence is checked.
* BUGFIX: When extending and only one log file is required, but there are more, error message is displayed.

Version 1.3

2018-08-30 1.3.396

* FEATURE: Legacy log signatures (.gtsig files) containing RFC3161 timestamps can be verified.
* FEATURE: RFC3161 timestamps in legacy log signatures can be converted and saved as extended KSI signatures when extending with '--enable-rfc3161-conversion' switch.
* IMPROVEMENT: rebuild.sh can be used with '--get-dep-online' option to build logksi without explicitly downloading and/or installing dependencies.
* IMPROVEMENT: libgtrfc3161 dependency added to build scripts.
* IMPROVEMENT: When KSI_CONF environment variable points to a non-existent file or the file cannot be accessed, a warning is displayed instead of exiting with an error message. An error in the configuration file is still handled as an error.
* IMPROVEMENT: Allow storing of record and tree hashes to be switched on and off between blocks in the same file.
* IMPROVEMENT: The sign command now also searches for .gtsig files when resolving log signature file names.
* IMPROVEMENT: The extract command now also searches for .gtsig files when resolving log signature file names.
* IMPROVEMENT: The --insert-missing-hashes switch can be used to insert missing tree hashes into legacy log signatures without overwriting the RFC3161 timestamps.
* IMPROVEMENT: Logline is now prefixed with logline number when verifying with -d switch.
* BUGFIX: User is warned about an empty KSI_CONF environment variable.
* BUGFIX: Maximum length of logline is now 64K, without newline separator.
* BUGFIX: Conf command can be used to dump the value of KSI_CONF variable and contents of the configuration file that KSI_CONF points to.
* BUGFIX: Out of range extract positions not allowed.
* BUGFIX: Memory allocation optimized to avoid pre-allocation of out-of-range extract positions.
* BUGFIX: Use of whitespace prohibited for specifying extract positions.

Version 1.2

2017-11-29 1.2.323

* IMPROVEMENT: Presence of a closing metarecord is checked for incomplete blocks.
* IMPROVEMENT: Presence of final tree hashes is now also checked when only tree hashes are stored.
* IMPROVEMENT: New switch '--insert-missing-hashes' can be used to fix log signatures with missing final tree hashes.
* IMPROVEMENT: New switch '--force-overwrite' can be used to overwrite the existing log signature during integration.
* IMPROVEMENT: User is warned about unsigned root hashes during integration.
* IMPROVEMENT: Extracted excerpt file extension renamed from .part to .excerpt.
* IMPROVEMENT: Help text improved for hash comparison failures.
* BUGFIX: Parts that contain neither hashes nor signatures are now properly integrated.

Version 1.1

2017-10-05 1.1.258

* BUGFIX: Extending: previous leaf hashes are not verified if record/tree hashes are not available for computing leaf hashes.

2017-08-03 1.1.249

* FEATURE: Extraction: hash chains of log records can be extracted into record integrity proof files.
* FEATURE: Verifying: record integrity proof files can be verified against excerpt files.
* FEATURE: HMAC algorithm for KSI aggregator/extender can be specified with --[aggr|ext]-hmac-alg switch.
* FEATURE: PDU version for KSI aggregator/extender can be specified with --[aggr|ext]-pdu-v switch.
* IMPROVEMENT: Presence of record and tree hashes is checked.
* IMPROVEMENT: Verifying: log file can be read from stdin with --log-from-stdin switch.
* IMPROVEMENT: Signing and extending: log signature can now be read from standard input with --log-from-stdin switch.
* IMPROVEMENT: Integrating: output can be directed to stdout by specifying - as the output file.

Version 1.0

2017-06-28 1.0.187

* BUGFIX: Tree height is now calculated correctly for perfectly balanced trees.

2017-05-04 1.0.178

* FEATURE: Integration: blocks and signatures files from asynchronous signing can be integrated into a single log signature file.
* FEATURE: Sign recovery: missing KSI signatures can be added to a log signature file.
* FEATURE: Verification: log signature files can be verified against log files.
* FEATURE: Extending: KSI signatures in a log signature file can be extended.
* FEATURE: Support of LOGSIG12 format, including meta-records.
