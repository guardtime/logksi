.TH LOGKSI-SIGN 1
.\"
.SH NAME
\fBlogksi sign \fR- Sign unsigned blocks for the given log file.
.\"
.SH SYNOPSIS
.HP 4
\fBlogksi sign \fI<logfile>\fR [\fB-o \fI<out.logsig>\fR] \fB-S \fIURL \fR[\fB--aggr-user \fIuser \fB--aggr-key \fIkey\fR] [\fImore options\fR]
.HP 4
\fBlogksi sign --sig-from-stdin [\fB-o \fI<out.logsig>\fR] \fB-S \fIURL \fR[\fB--aggr-user \fIuser \fB--aggr-key \fIkey\fR] [\fImore options\fR]
.\"
.SH DESCRIPTION
Signs the unsigned log blocks in a log signature file of a given \fI<logfile>\fR. The name of the log signature file located in the same directory as the \fI<logfile>\fR is expected to be \fI<logfile>.logsig\fR or \fI<logfile>.gtsig\fR. Alternatively, if no \fI<logfile>\fR is specified, the \fB--sig-from-stdin\fR option should be used to read the log signature file from the \fIstdin\fR. If neither the \fI<logfile>\fR nor \fB--sig-from-stdin\fR option is given, help text is returned.
.LP
\fBlogksi sign\fR provides the recovery signing functionality for cases when some log blocks have been left unsigned during routine signing/logging. For instance, when the KSI service was not reachable.
.LP
User must have access to KSI signing service (KSI Aggregator) for signing.
.\"
.SH OPTIONS
.TP
\fI<logfile>\fR
Name of the log file whose unsigned log blocks should be signed. If \fI<logfile>\fR is specified, the \fB--sig-from-stdin\fR option cannot be used.
.\"
.TP
\fB--sig-from-stdin\fR
Use to read the log signature file from \fIstdin\fR. If no output file is specified with \fB-o\fR, the result will be returned to \fIstdout\fR.
.\"
.TP
\fB-o \fI<out.logsig>\fR
Specify the name of the output log signature file; recommended file extension is \fI.logsig\fR. If not specified, the input file \fI<logfile>.logsig\fR is modified. At first output is written into temporary file without affecting original file at all. If there are some changes the original file is renamed to backup file \fI<logfile>.logsig.bak\fR, otherwise temporary file is discarded. If the output file name is explicitly specified, output file is created even without any changes and an existing file will always be overwritten and no backup file will be created. Use '-' as file name to redirect the output as a binary stream to \fIstdout\fR.
.\"
.TP
\fB-S \fIURL\fR
Specify the signing service (KSI Aggregator) URL.
.\"
.TP
\fB--aggr-user \fIuser\fR
Specify the username for signing service.
.\"
.TP
\fB--aggr-key \fIkey\fR
Specify the HMAC key for signing service.
.\"
.TP
\fB--aggr-hmac-alg \fIalg\fR
Hash algorithm to be used for computing HMAC on outgoing messages towards KSI aggregator. If not set, default algorithm is used. Use \fBlogksi -h \fRto get the list of supported hash algorithms.
.\"
.TP
\fB--insert-missing-hashes\fR
Repair the log signature by inserting missing final tree hashes. Final tree hashes might be missing if the Merkle tree is not perfectly balanced. If the option is not used, a warning message is printed about missing hashes with a recommendation to run \fBlogksi sign\fR again with the \fB--insert-missing-hashes\fR option. Inserting missing hashes improves verifiablity, but a log signature without final tree hashes is verifiable as well.
.\"
.TP
\fB--continue-on-fail\fR
This option can be used to continue signing in case of signing error. Other errors (e.g. verification error) will terminated the process. Problematic block is not changed and is written to file to be able to fix that in the future. Despite of continuation, errors are reported and logksi will exit code other than 0.
.\"
.TP
\fB-d\fR
Print detailed information about processes and errors to \fIstderr\fR. To make output more verbose increase debug level with \fB-dd\fR or \fB-ddd\fR. With debug level 1 a summary of log file is displayed. With debug level 2 a summary of each block and the log file is displayed. Debug level 3 will display the whole parsing of the log signature file. The parsing of \fIrecord hashes (r)\fR, \fItree hashes (.)\fR, \fIfinal tree hashes (:)\fR and \fImeta-records (M)\fR is displayed inside curly brackets in following manner \fI{r.Mr..:}\fR. In case of a failure \fI(X)\fR is displayed and closing curly bracket is omitted.
.\"
.TP
\fB--hex-to-str\fR
Will encode applicable hex encoded data fields to ASCII string (e.g. meta-record value). Non-printable characters are displayed in hex with leading backslash (e.g. 'Text\\00').
.\"
.TP
\fB--show-progress\fR
Print signing progress. Only valid with -d and debug level 1.\fR
.\"
.TP
\fB--conf \fIfile\fR
Read configuration options from the given file. It must be noted that configuration options given explicitly on command line will override the ones in the configuration file. See \fBlogksi-conf\fR(5) for more information.
.\"
.TP
\fB--log \fIfile\fR
Write libksi log to the given file. Use '-' as file name to redirect the log to \fIstdout\fR.
.br
.\"
.SH EXIT STATUS
See \fBlogksi\fR(1) for more information.
.\"
.SH EXAMPLES
In the following examples it is assumed that KSI service configuration options (URLs, access credentials) are defined. See \fBlogksi-conf\fR(5) for more information.
.\"
.TP 2
\fB1
To sign unsigned blocks in log signature file \fI/var/log/secure.logsig\fR and save the amended log signature file in \fI/var/log/secure-signed.logsig\fR:
.LP
.RS 4
\fBlogksi sign \fI/var/log/secure\fR \fB-o \fI/var/log/secure-signed.logsig\fR
.RE
.\"
.TP 2
\fB2
To sign unsigned blocks in log signature file \fI/var/log/secure.logsig\fR and save the result in the same file after creating the respective backup file \fI/var/log/secure.logsig.bak\fR:
.LP
.RS 4
\fBlogksi sign \fI/var/log/secure\fR
.RE
.\"
.SH ENVIRONMENT
Use the environment variable \fBKSI_CONF\fR to define the default configuration file. See \fBlogksi-conf\fR(5) for more information.
.LP
.SH AUTHOR
Guardtime AS, http://www.guardtime.com/
.LP
.SH SEE ALSO
\fBlogksi\fR(1), \fBlogksi-extend\fR(1), \fBlogksi-extract\fR(1), \fBlogksi-integrate\fR(1), \fBlogksi-verify\fR(1), \fBlogksi-conf\fR(5)
